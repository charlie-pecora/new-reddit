// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: create_user.sql

package database

import (
	"context"
)

const createOrUpdateUser = `-- name: CreateOrUpdateUser :one
insert into users (sub, name) values (
  $1,
  $2
)
on conflict (sub) do update
set name = $2
returning id, sub, name
`

type CreateOrUpdateUserParams struct {
	Sub  string
	Name string
}

func (q *Queries) CreateOrUpdateUser(ctx context.Context, arg CreateOrUpdateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createOrUpdateUser, arg.Sub, arg.Name)
	var i User
	err := row.Scan(&i.ID, &i.Sub, &i.Name)
	return i, err
}
